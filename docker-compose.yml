version: "3.8"
services:
  db:
    image: postgres:16
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - backend-network

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network

  backend:
    build:
      context: ./DigiShikshya-backend
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=digishikshya
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
 
volumes:
  db-data: